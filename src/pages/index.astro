---
import MainLayout from 'layouts/MainLayout.astro';
import { generateProductData } from 'libs/aLaUne.ts';
import { config } from 'libs/donner';
import { ChevronDown, Quote } from 'lucide-astro';
import moi from '/public/images/moi.png';
import moiMob from '/public/images/moi.jpg';
import ProductCard from 'components/global/Cards.astro';
import Picture from 'components/global/Picture.astro';
---

<MainLayout title="Trouve ta pièce | Trouvez les meilleurs artisans et pièces." class="overflow-x-hidden">
  <main class="w-screen">
    <div class="w-screen absolute imagetete h-screen"></div>
    <div class="z-10 relative lg:w-3/6 h-[90vh] flex flex-col justify-end pl-8 text-white">
      <h1 class="font-semibold text-2xl w-2/3 lg:w-full lg:text-4xl lg:pr-8 lg:pb-6">
        Bienvenue sur le site dédié aux passionnés de moto !
      </h1>
      <h2 class="lg:text-lg pl-2 w-full pr-4 lg:pr-0 text-xs gap-2 flex flex-col">
        Découvrez une vaste collection de pièces, allant des classiques aux plus rares, soigneusement répertoriées pour répondre à tous vos besoins.
        <span>Notre plateforme vous propose une gamme variée de tarifs, garantissant des options pour chaque budget.</span>
        <span>En plus de vous offrir un accès facile à ces trésors mécaniques, je partage également mes conseils d'expert pour vous guider dans vos choix.</span>
        Plongez dans l'univers de la moto et parcourez notre sélection pour transformer votre expérience de conduite.
      </h2>
    </div>
    <div class="gradient w-full h-2"></div>
    <div class="flex justify-center gap-1 lg:gap-3 mt-16 lg:w-4/5 lg:mx-auto">
		<div
			id="carousel"
			class="h-[37rem] flex items-center overflow-hidden lg:overflow-x-auto lg:overflow-y-hidden lg:select-none lg:cursor-grab lg:touch-pan-y"
		>
			<div id="slide" class="slide-track hover:[animation-play-state:paused] md:flex">
			{generateProductData(config).map(product => (
				<div class="mx-4">
					<ProductCard
						title={product.title}
						logo={`/images/${product.logo}`}
						alt={product.alt}
						description={product.description}
						typeMotor={product.typeMotor}
						typeMotor1={product.typeMotor1}
						price={product.price}
						imageSrc={product.imageSrc}
						lien={product.link}
					/>
				</div>
			))}
			{generateProductData(config).map(product => (
				<div class="hidden lg:block mx-4">
					<ProductCard
					title={product.title}
					logo={`/images/${product.logo}`}
					alt={product.alt}
					description={product.description}
					typeMotor={product.typeMotor}
					typeMotor1={product.typeMotor1}
					price={product.price}
					imageSrc={product.imageSrc}
					lien={product.link}
					/>
				</div>
			))}
			<div id="move" class="flex justify-center opacity-75 items-end absolute ml-36 h-2/3 z-50 md:hidden">
				<img src="/images/slide.png" class="w-10 h-10" alt="">
			</div>
		</div>
	</div>
    </div>
    <div class="w-full flex justify-center mb-20 mt-16 lg:mt-0">
      <div class="w-11/12 lg:w-4/5 rounded-2xl bg flex items-center pb-4 justify-center lg:py-0 lg:pr-20 flex-col lg:flex-row">
        <Picture class="rounded-l-2xl hidden lg:block w-4/5" src={moi} alt="Moto"></Picture>
        <Picture class="rounded-t-2xl block lg:hidden" src={moiMob} alt="Moto"></Picture>
        <p class="w-3/5 text-white gap-3 mx-4 hidden md:flex text-[1.3rem] italic">
          <Quote class="w-96"/>Moi c’est Lucas, motard de 24 ans, passionné de moto depuis tout petit. Cette passion s'est rapidement étendue à la mécanique. J'ai commencé par construire mes propres moteurs de 50cc, participant à des rassemblements informels qui se sont rapidement transformés en compétitions. J'ai eu l'opportunité de courir pour l'équipe WRP Racing dans plusieurs compétitions, notamment à Salbris et Bordeaux, où j'ai toujours obtenu d'excellents résultats. Au fil des ans, j'ai construit et préparé un grand nombre de moteurs, que ce soit pour moi-même ou pour des clients. J'ai réalisé de nombreuses préparations de configurations, certaines plus extravagantes que d'autres. Grâce à cela, j'ai acquis une solide connaissance et expérience dans le domaine.
          C'est cette expertise que j'ai décidé de partager en créant ce site. Mon objectif est d'aider les novices à comprendre plus facilement le monde de la moto, mais aussi de référencer des pièces parfois rares.
          <p class="flex md:hidden w-11/12 text-white"><Quote class="w-20"/>Moi c’est Lucas, motard de 24 ans, passionné de moto depuis tout petit. Cette passion s'est rapidement étendue à la mécanique.</p>
          <details class="flex items-center md:hidden flex-col-reverse">
            <summary class="justify-center text-white flex items-center list-none">
                Voir plus
                <ChevronDown class="cheSum w-8 transition-transform duration-300" />
            </summary>
            <div class="contents">
               <p class="text-white gap-3 mx-4 w-11/12">J'ai commencé par construire mes propres moteurs de 50cc, participant à des rassemblements informels qui se sont rapidement transformés en compétitions. J'ai eu l'opportunité de courir pour l'équipe WRP Racing dans plusieurs compétitions, notamment à Salbris et Bordeaux, où j'ai toujours obtenu d'excellents résultats. Au fil des ans, j'ai construit et préparé un grand nombre de moteurs, que ce soit pour moi-même ou pour des clients. J'ai réalisé de nombreuses préparations de configurations, certaines plus extravagantes que d'autres. Grâce à cela, j'ai acquis une solide connaissance et expérience dans le domaine.
                C'est cette expertise que j'ai décidé de partager en créant ce site. Mon objectif est d'aider les novices à comprendre plus facilement le monde de la moto, mais aussi de référencer des pièces parfois rares.</p>
            </div>
        </details>
        </p>
      </div>
    </div>
  </main>
<script>
  document.querySelectorAll('img').forEach(img => {
    img.loading = 'lazy';
    img.decoding = 'async';
  });
</script>
</MainLayout>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const carousel = document.getElementById('carousel') as HTMLElement | null;
    const track = document.getElementById('slide') as HTMLElement | null;
    const moveIndicator = document.getElementById('move') as HTMLElement | null;
    if (!carousel || !track) return;

    // 1) Pas de drag natif d’images
    carousel.querySelectorAll('img').forEach(img => {
      img.setAttribute('draggable', 'false');
    });
    carousel.addEventListener('dragstart', (e) => e.preventDefault(), { capture: true });

    // 2) Hint mobile une seule fois
    let hinted = false;
    const hintOnce = () => {
      if (hinted || !moveIndicator) return;
      hinted = true;
      setTimeout(() => moveIndicator.classList.add('hidden'), 1000);
    };

    // 3) Gestion du drag
    let pointerActive = false;
    let dragging = false;
    let startX = 0;
    let lastX = 0;
    let startScrollLeft = 0;
    let movedPx = 0;

    const DRAG_THRESHOLD = 6; // px avant d'entrer en mode drag

    const pause = () => { track.style.animationPlayState = 'paused'; };
    const play  = () => { track.style.animationPlayState = ''; };

    // Pour couper les interactions pendant le drag
    const interactiveSelector = 'a, button, input, textarea, select, [role="button"]';
    let disabledInteractive: HTMLElement[] = [];
    const disableInteractives = () => {
      disabledInteractive = Array.from(carousel.querySelectorAll<HTMLElement>(interactiveSelector));
      disabledInteractive.forEach(el => el.classList.add('pointer-events-none'));
    };
    const enableInteractives = () => {
      disabledInteractive.forEach(el => el.classList.remove('pointer-events-none'));
      disabledInteractive = [];
    };

    carousel.addEventListener('pointerdown', (e: PointerEvent) => {
      pointerActive = true;
      dragging = false;
      hintOnce();
      startX = e.clientX;
      lastX = e.clientX;
      startScrollLeft = carousel.scrollLeft;
      movedPx = 0;

      carousel.setPointerCapture?.(e.pointerId);
      // On ne pause pas encore l’animation : on attend le seuil
    });

    carousel.addEventListener('pointermove', (e: PointerEvent) => {
      if (!pointerActive) return;

      const dx = e.clientX - lastX;
      lastX = e.clientX;
      movedPx += Math.abs(dx);

      if (!dragging) {
        if (Math.abs(e.clientX - startX) < DRAG_THRESHOLD) return;
        // On entre en mode drag
        dragging = true;
        pause();
        disableInteractives();
        carousel.classList.add('cursor-grabbing', 'select-none');
      }

      // Une fois en drag, on empêche la sélection/clic & on scroll
      e.preventDefault();
      carousel.scrollLeft = startScrollLeft - (e.clientX - startX);
    }, { passive: false });

    const endPointer = (e: PointerEvent) => {
      if (!pointerActive) return;
      pointerActive = false;

      try { carousel.releasePointerCapture?.(e.pointerId); } catch {}

      if (dragging) {
        // Fin d'un vrai drag
        dragging = false;
        enableInteractives();
        carousel.classList.remove('cursor-grabbing', 'select-none');
        if (!carousel.matches(':hover')) play();
      } else {
        // Pas de drag => clic normal
        // (on ne touche pas à l’anim qui peut être en pause via :hover)
      }
    };

    carousel.addEventListener('pointerup', endPointer);
    carousel.addEventListener('pointercancel', endPointer);
    carousel.addEventListener('mouseleave', () => {
      // Si la souris sort sans pointerup
      if (!pointerActive && !dragging) { if (!carousel.matches(':hover')) play(); }
    });

    // Cohérence avec le hover
    carousel.addEventListener('mouseenter', () => { if (!dragging) pause(); });
    carousel.addEventListener('mouseleave', () => { if (!dragging) play(); });

    // 4) Tue le clic si on a vraiment glissé (capture pour battre les <a>)
    carousel.addEventListener('click', (e) => {
      if (movedPx > DRAG_THRESHOLD) {
        e.preventDefault();
        e.stopPropagation();
      }
    }, true);

    // 5) Optionnel : pas de menu contextuel si on était en drag
    carousel.addEventListener('contextmenu', (e) => {
      if (movedPx > DRAG_THRESHOLD) e.preventDefault();
    })
  })
</script>
